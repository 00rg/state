load(
    "//bazel:rules.bzl",
    "helm_chart_crds",
    "helm_template",
    "istio_operator",
    "kustomize_build",
    "update_third_party_manifests",
)

# Mapping of third-party manifest targets to where they should be installed.
_THIRD_PARTY_MANIFESTS = {
    "//bazel/third_party:argocd_ha_manifest": "kube/platform/argocd/overlays/management/argocd.gen.yaml",
    "//bazel/third_party:argocd_non_ha_manifest": "kube/platform/argocd/overlays/local/argocd.gen.yaml",
    "//bazel/third_party:crossplane_manifest": "kube/platform/crossplane-base/base/crossplane.gen.yaml",
    "//bazel/third_party:istio_operator_manifest": "kube/platform/istio-operator/base/istio-operator.gen.yaml",
    "//bazel/third_party:grafana_agent_operator_manifest": "kube/platform/grafana-stack/base/grafana-agent-operator.gen.yaml",
    "//bazel/third_party:grafana_agent_operator_crds_manifest": "kube/platform/grafana-stack-crds/base/grafana-agent-operator-crds.gen.yaml",
    "//bazel/third_party:kube_prometheus_manifest": "kube/platform/grafana-stack/base/kube-prometheus.gen.yaml",
    "//bazel/third_party:kube_prometheus_crds_manifest": "kube/platform/grafana-stack-crds/base/kube-prometheus-crds.gen.yaml",
    "//bazel/third_party:loki_manifest": "kube/platform/grafana-stack/base/loki.gen.yaml",
    "//bazel/third_party:tempo_manifest": "kube/platform/grafana-stack/base/tempo.gen.yaml",
}

istio_operator(
    name = "istio_operator_manifest",
)

kustomize_build(
    name = "argocd_non_ha_manifest",
    srcs = ["@argocd//:all"],
    dirs = ["external/argocd/cluster-install"],
)

kustomize_build(
    name = "argocd_ha_manifest",
    srcs = ["@argocd//:all"],
    dirs = [
        "external/argocd/crds",
        "external/argocd/ha/namespace-install",
    ],
)

helm_template(
    name = "crossplane_manifest",
    srcs = ["@crossplane//:all"],
    chart_dir = "external/crossplane",
    namespace = "crossplane-system",
    release_name = "crossplane",
    values_file = "//bazel/third_party/crossplane:crossplane.values.yaml",
)

helm_template(
    name = "grafana_agent_operator_manifest",
    srcs = ["@grafana_agent_operator//:all"],
    chart_dir = "external/grafana_agent_operator",
    namespace = "grafana-stack",
    release_name = "grafana-agent-operator",
    values_file = "//bazel/third_party/grafana_agent_operator:grafana-agent-operator.values.yaml",
)

helm_chart_crds(
    name = "grafana_agent_operator_crds_manifest",
    srcs = ["@grafana_agent_operator//:all"],
    chart_dir = "external/grafana_agent_operator",
)

helm_template(
    name = "kube_prometheus_manifest",
    srcs = ["@kube_prometheus//:all"],
    chart_dir = "external/kube_prometheus",
    namespace = "grafana-stack",
    release_name = "kube-prometheus",
    values_file = "//bazel/third_party/kube_prometheus:kube-prometheus.values.yaml",
)

helm_chart_crds(
    name = "kube_prometheus_crds_manifest",
    srcs = ["@kube_prometheus//:all"],
    chart_dir = "external/kube_prometheus",
)

helm_template(
    name = "loki_manifest",
    srcs = ["@loki//:all"],
    api_versions = [
        "monitoring.coreos.com/v1/PrometheusRule",
        "monitoring.coreos.com/v1/ServiceMonitor",
    ],
    chart_dir = "external/loki",
    namespace = "grafana-stack",
    release_name = "loki",
    values_file = "//bazel/third_party/loki:loki.values.yaml",
)

helm_template(
    name = "tempo_manifest",
    srcs = ["@tempo//:all"],
    chart_dir = "external/tempo",
    namespace = "grafana-stack",
    release_name = "tempo",
    values_file = "//bazel/third_party/tempo:tempo.values.yaml",
)

update_third_party_manifests(
    name = "update_third_party_manifests",
    manifests = _THIRD_PARTY_MANIFESTS,
)

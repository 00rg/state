workspace(name = "borgorg")

load(
    "//bazel:deps.bzl",
    "org_binary_dependencies",
    "org_container_dependencies",
    "org_go_dependencies",
    "org_manifest_dependencies",
    "org_protobuf_dependencies",
    "org_python_dependencies",
    "org_rust_dependencies",
    "org_util_dependencies",
)

###############################################################################
# U T I L   D E P E N D E N C I E S
###############################################################################

org_util_dependencies()

###############################################################################
# B I N A R Y   D E P E N D E N C I E S
###############################################################################

org_binary_dependencies()

###############################################################################
# K U B E R N E T E S   M A N I F E S T   D E P E N D E N C I E S
###############################################################################

org_manifest_dependencies()

###############################################################################
# P Y T H O N   T O O L C H A I N   D E P E N D E N C I E S
###############################################################################

org_python_dependencies()

load("@rules_python//python:repositories.bzl", "python_register_toolchains")

python_register_toolchains(
    name = "python3_10_6",
    python_version = "3.10.6",
)

###############################################################################
# P Y T H O N   L I B R A R Y   D E P E N D E N C I E S
###############################################################################

load("//bazel:python_lib_deps.bzl", "org_python_lib_dependencies")

org_python_lib_dependencies()

###############################################################################
# G O   T O O L C H A I N   D E P E N D E N C I E S
###############################################################################

org_go_dependencies()

load("@io_bazel_rules_go//go:deps.bzl", "go_register_toolchains", "go_rules_dependencies")

go_rules_dependencies()

go_register_toolchains(version = "1.19.3")

###############################################################################
# P R O T O B U F   D E P E N D E N C I E S
###############################################################################

org_protobuf_dependencies()

load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")

protobuf_deps()

###############################################################################
# G O   L I B R A R Y   D E P E N D E N C I E S
###############################################################################

load("//bazel:go_lib_deps.bzl", "org_go_lib_dependencies")

# gazelle:repository_macro bazel/go_lib_deps.bzl%org_go_lib_dependencies
org_go_lib_dependencies()

###############################################################################
# G A Z E L L E   D E P E N D E N C I E S
###############################################################################

load("@bazel_gazelle//:deps.bzl", "gazelle_dependencies")

# The following Gazelle annotation is required since we pull in bazel_gazelle
# via a macro rather than directly within this file. This call to gazell_dependencies
# must take place after the call to org_go_lib_dependencies to prevent issues
# like https://github.com/bazelbuild/bazel-gazelle/issues/1233#issuecomment-1094334092.
# gazelle:repo bazel_gazelle
gazelle_dependencies(
    # By default, Gazelle only looks for WORKSPACE.
    # See https://github.com/bazelbuild/bazel-gazelle/issues/678.
    go_repository_default_config = "@//:WORKSPACE.bazel",
)

###############################################################################
# R U S T  T O O L C H A I N  D E P E N D E N C I E S
###############################################################################

org_rust_dependencies()

load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies", "rust_register_toolchains")

rules_rust_dependencies()

rust_register_toolchains(
    edition = "2021",
    version = "1.65.0",
)

# Use the following for the nightly toolchain:
# rust_register_toolchains(version = "nightly", iso_date = "2022-12-04", edition="2021")

load("@rules_rust//crate_universe:repositories.bzl", "crate_universe_dependencies")

crate_universe_dependencies()

###############################################################################
# R U S T   L I B R A R Y   D E P E N D E N C I E S
###############################################################################

load("//bazel:rust_lib_deps.bzl", "org_rust_lib_dependencies")

org_rust_lib_dependencies()

load("@crate_index//:defs.bzl", "crate_repositories")

crate_repositories()

###############################################################################
# C O N T A I N E R   T O O L C H A I N   D E P E N D E N C I E S
###############################################################################

org_container_dependencies()

load("@io_bazel_rules_docker//repositories:repositories.bzl", container_repositories = "repositories")

container_repositories()

load("@io_bazel_rules_docker//repositories:deps.bzl", container_deps = "deps")

container_deps()

###############################################################################
# C O N T A I N E R   B A S E   I M A G E   D E P E N D E N C I E S
###############################################################################

# The following macro invocations (go_image_repositories and rust_image_repositories) are
# only required if go_image/rust_image is used as the invocations below will declare the
# standard Go/Rust base image dependencies. If we use container_image (better practice?)
# to fully define our own base images then the following can be omitted.
load("@io_bazel_rules_docker//go:image.bzl", go_image_repositories = "repositories")

go_image_repositories()

load("@io_bazel_rules_docker//rust:image.bzl", rust_image_repositories = "repositories")

rust_image_repositories()

load("//bazel:container_deps.bzl", "org_base_container_dependencies")

org_base_container_dependencies()
